@page "/forgot-password"

@* Potřebné namespace *@
@using System.ComponentModel.DataAnnotations
@using Taskly.Models
@using Taskly.Services.Auth
@using Firebase.Auth;
@using Firebase.Auth.Providers

@* Služby pro DI *@
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject IAuthService FirebaseAuthService
@inject ILogger<ForgotPassword> Logger
@inject INotificationService NotificationService

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <MudCard Elevation="4" Class="pa-4">
        <MudCardHeader>
            <MudText Typo="Typo.h4" Align="Align.Center">Zapomenuté heslo</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText Class="mb-4" Align="Align.Center">
                Zadejte svůj e-mail a zašleme vám instrukce pro obnovení hesla.
            </MudText>
 
            @* Formulář pro zadání emailu *@
            <EditForm Model="@forgotPasswordModel" OnValidSubmit="HandleForgotPassword">
                <DataAnnotationsValidator />

                @* Pole pro email *@
                <MudTextField T="string"
                              @bind-Value="forgotPasswordModel.Email"
                              For="@(() => forgotPasswordModel.Email)"
                              Label="Email"
                              Disabled="@isSubmitting"
                              Class="mb-4" />
                <ValidationSummary />

               @*  Tlačítko pro odeslání *@
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           Size="Size.Large"
                           FullWidth="true"
                           ButtonType="ButtonType.Submit"
                           Disabled="@isSubmitting">
                    @if (isSubmitting)
                    {
                        <MudProgressCircular Size="Size.Small" Indeterminate="true" Color="Color.Default" />
                    }
                    else
                    {
                        @("Odeslat instrukce")
                    }
                </MudButton>
            </EditForm>

            @* Odkaz zpět na přihlášení *@
            <MudText Align="Align.Center" Class="mt-4">
                <MudLink Href="/login">Zpět na přihlášení</MudLink>
            </MudText>
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    // Model a stavové proměnné
    // Model pro data obnovy hesla
    private ForgotPasswordDto forgotPasswordModel = new();
    // Indikátor probíhajícího zpracování požadavku
    private bool isSubmitting = false;

    // Zpracování požadavku na obnovení hesla
    private async Task HandleForgotPassword()
    {
        try
        {
            isSubmitting = true;

            // Logování akce
            Logger.LogInformation($"Odesílám e-mail na adresu: {forgotPasswordModel.Email}");

            // Volání Firebase služby pro reset hesla
            var result = await FirebaseAuthService.ResetPasswordAsync(forgotPasswordModel.Email);

            if (result)
            {
                // Úspěšné odeslání - informujeme uživatele a přesměrujeme
                await NotificationService.ShowToastAfterForceLoadAsync("Pokyny k resetu hesla byly odeslány na váš e-mail. Zkontrolujte svou poštu.", NotificationType.Info);
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                // Běžná chybová hláška
                NotificationService.ShowToast("Něco se pokazilo při odesílání pokynů pro reset hesla.", NotificationType.Error);
            }
        }
        catch (ApplicationException ex)
        {
            // Specifická výjimka z aplikace
            NotificationService.ShowToast($"Chyba: {ex.Message}", NotificationType.Error);
            Logger.LogError($"Chyba: {ex.Message}");
        }
        catch (Exception ex)
        {
            // Obecná chyba
            NotificationService.ShowToast("Došlo k chybě při odesílání pokynů pro reset hesla.", NotificationType.Error);
            Logger.LogError($"Chyba: {ex.Message}");
        }
        finally
        {
            // Reset stavu zpracování
            isSubmitting = false;
        }
    }
}